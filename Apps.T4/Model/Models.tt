<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
//  导入MultipleOutputHelper.ttinclude文件
<#@ include file="$(ProjectDir)MultipleOutputHelper.ttinclude" #>
<#@ include file="$(ProjectDir)DbHelper.ttinclude" #>
<#        
        //string connectionString= "server=.;database=Inferno;Integrated Security=true;";     
   	    string connectionString="Data Source=DESKTOP-7SJTICU;Initial Catalog=AppsDB;User ID=sa;Password=SQLServer.20180830;";
       
        SqlConnection conn = new SqlConnection(connectionString);
        conn.Open();
        string selectQuery ="SET FMTONLY ON; select * from @tableName; SET FMTONLY OFF;";
        SqlCommand command = new SqlCommand(selectQuery,conn);
        SqlDataAdapter ad = new SqlDataAdapter(command);
        System.Data.DataSet ds = new DataSet(); 
  
        var manager = Manager.Create(Host, GenerationEnvironment);  

        System.Data.DataTable schema = conn.GetSchema("Tables");
        foreach(System.Data.DataRow row in schema.Rows)
        {    
            ds.Tables.Clear();
            string tb_name= row["TABLE_NAME"].ToString();        
            command.CommandText = selectQuery.Replace("@tableName",row["TABLE_NAME"].ToString());
            ad.FillSchema(ds, SchemaType.Mapped,tb_name);  
            manager.StartNewFile(tb_name+"Model.cs");#>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//     生成时间<#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#>
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
namespace Apps.Models.Sys
{    
    /// <summary>
    /// <#=tb_name#>Model
    /// </summary>
    public class <#=tb_name#>Model    
    {    
        <#
        PushIndent("          ");
		foreach(DbColumn column in DbHelper.GetDbColumns(connectionString,"AppsDB", tb_name))
        {
WriteLine("/// <summary>");
WriteLine("///"+  DbHelper.GetDeault(column.Remark));
WriteLine("/// </summary>");
			if(column.CSharpType=="DateTime"){
WriteLine("[DateExpression]");
				} 
			if(!column.IsNullable){
WriteLine("[NotNullExpression]");
			 } 
			if(column.IsPrimaryKey){
WriteLine("[Required]");
			 } 
			if(column.CharLength>0){
WriteLine("[MaxWordsExpression("+column.CharLength+")]");
				 } 
						if(!string.IsNullOrEmpty(column.Remark)){
WriteLine("[Display(Name=\""+column.Remark+"\")]");
				}else{
WriteLine("[Display(Name=\""+column.ColumnName+"?\")]");
}
            WriteLine("public " +column.CSharpType + (column.CommonType.IsValueType && column.IsNullable ? "? ": " ") +column.ColumnName+ " { get; set; }");
        }
WriteLine("");
        PopIndent();
        #>
    }
}
    
<#
        manager.EndBlock();    
         }            
        conn.Close();  
       manager.Process(true);  
        #> 